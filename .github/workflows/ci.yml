name: Flutter CI/CD

# This workflow is triggered on pushes to the repository
on:
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  code-analysis-and-testing-with-coverage-analysis:
    name: Code Analysis and Testing With Coverage Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: echo "This repository has been cloned to the runner"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.0.0"
          channel: "stable"
      - run: echo "Using the latest stable version of flutter from subosito"

      - name: Get pub dependencies
        run: flutter pub get

      - name: Flutter analyze
        run: flutter analyze

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Add Coverde to project
        run: dart pub global activate coverde

      - name: Check test coverage
        run: coverde check 80
      # - name: Very Good Coverage
      #   uses: VeryGoodOpenSource/very_good_coverage@v1.2.1
      #   with:
      #     min_coverage: 80

  build_android:
    name: Build Flutter (Android)
    needs: [code-analysis-and-testing-with-coverage-analysis] # requires the code-analysis-and-testing-with-coverage-analysis to run before the steps run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.0.0"
          channel: "stable"

      - name: Flutter build android
        run: flutter build apk --release

      - name: Create a Release for Android
        uses: ncipollo/release-action@v1
        with:
          name: "News App Android v1.0.${{github.run_number}}"
          artifacts: "build/app/outputs/apk/release/*"
          tag: v1.0.${{github.run_number}}
          token: ${{ secrets.TOKEN }}
          body: "Release body sample for android"
          generateReleaseNotes: true

  build_ios:
    name: Build Flutter (iOS)
    needs: [code-analysis-and-testing-with-coverage-analysis] # requires the code-analysis-and-testing-with-coverage-analysis to run before the steps run
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.0.0"
          channel: "stable"

      - name: Flutter build ios
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos          
          mkdir Payload                  
          cd Payload                     
          ln -s ../Runner.app            
          cd ..                           
          zip -r app.ipa Payload

      - name: Create Release for Ios
        uses: ncipollo/release-action@v1
        with:
          name: "News App Ios v1.0.${{github.run_number}}"
          artifacts: "build/ios/iphoneos/app.ipa"
          tag: ios.1.0.${{github.run_number}}
          token: ${{ secrets.TOKEN }}
          body: "Release body sample for ios"
          generateReleaseNotes: true

  # check_tags:
  #   - name: Send mail
  #     uses: dawidd6/action-send-mail@v3
  #     with:
  check_tags:
    runs-on: ubuntu-latest
    steps:
      - run: echo "v1.0.${{github.run_number}}"
      - run: echo "ios.1.0.${{github.run_number}}"
