name: New Flutter CI/CD
on:
  push:
    branches:
      - main

jobs:
  code-analysis-and-testing-with-coverage-analysis:
    name: Code Analysis and Testing With Coverage Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: echo "This repository has been cloned to the runner"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.0.0"
          channel: "stable"
      - run: echo "Using the latest stable version of flutter from subosito"

      - name: Get pub dependencies
        run: flutter pub get

      - name: Flutter analyze
        run: flutter analyze

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Add Coverde to project
        run: dart pub global activate coverde

      - name: Check test coverage
        run: coverde check 80

  create-build:
    name: Create ${{ matrix.target }} build
    needs: code-analysis-and-testing-with-coverage-analysis
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [Android, Ios]
        include:
          - target: Android
            build-target: apk --release
            os: ubuntu-latest
          - target: Ios
            build-target: ios --no-codesign
            os: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: echo "This repository has been cloned to the runner"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.0.0"
          channel: "stable"

      - name: Build for ${{ matrix.target }} platform
        run: flutter build ${{ matrix.build_target }}

      - name: Zip ipa
        if: matrix.target == 'Ios'
        run: |
          cd build/ios/iphoneos          
          mkdir Payload                  
          cd Payload                     
          ln -s ../Runner.app            
          cd ..                           
          zip -r app.ipa Payload

      - name: Create Releases for ${{ matrix.target }}
        uses: ncipollo/release-action@v1
        with:
          name: "News App ${{ matrix.target }} v1.0.${{github.run_number}}"
          token: ${{ secrets.TOKEN }}
          
          if: matrix.target == 'Android'
          artifacts: "build/app/outputs/apk/release/*"
          tag: v1.0.${{github.run_number}}
          body: "Release body sample for android"

          if: matrix.target == 'Ios'
          artifacts: "build/ios/iphoneos/app.ipa"
          tag: ios.1.0.${{github.run_number}}
          body: "Release body sample for ios"

